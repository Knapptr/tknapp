{"componentChunkName":"component---src-components-project-page-tsx","path":"/projects/PPI/","result":{"data":{"mdx":{"id":"9dea2459-8633-5c92-a5a1-142c55f466e9","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Python Project Initiator\",\n  \"emoji\": \"üêç\",\n  \"description\": \"CLI/Script for Initializing a Python Project.\",\n  \"tags\": [\"python\", \"script\", \"pip\", \"venv\"],\n  \"code\": \"https://github.com/knapptr/ppi\",\n  \"published\": true,\n  \"date\": \"2021-03-16T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"While learning python, I thought it would be helpful to have a script to set up a project and a venv to run in. It proved quite handy. I wrote some (questionable) install scripts for bash to add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ppi\"), \" to the system \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PATH\"), \". As well.\"), mdx(\"p\", null, \"Just excuse the hideous terminal here:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/48a55c9955ec3009f8022aaebba0c132/ppi.gif\",\n    \"alt\": \"ppi example\"\n  })), mdx(\"h3\", null, \"usage: ppi \", \"[-h]\", \" directory\"), mdx(\"p\", null, \"Initialize a Python Project. Creates a venv, git, .gitignore, .dotenv. Installs python-\\ndotenv with pip. Creates a template .py file with logging imported, and set up to DEBUG.\"), mdx(\"p\", null, \"positional arguments:\\ndirectory\"), mdx(\"p\", null, \"optional arguments:\\n-h, --help show this help message and exit\"), mdx(\"h3\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the install and uninstall scripts are pretty janky. There is probably a better, safer way to do this. For my use, its fine.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Python Project Initiator","tags":["python","script","pip","venv"],"description":"CLI/Script for Initializing a Python Project.","emoji":"üêç","code":"https://github.com/knapptr/ppi","example":null}}},"pageContext":{"id":"9dea2459-8633-5c92-a5a1-142c55f466e9"}},"staticQueryHashes":["3649515864"]}