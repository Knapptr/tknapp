{"version":3,"sources":["webpack://tknapp/./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js","webpack://tknapp/./src/components/PostShort.tsx","webpack://tknapp/./src/components/ProjectShort.tsx","webpack://tknapp/./src/pages/index.tsx","webpack://tknapp/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"names":["newStyled","forEach","tagName","title","date","description","tags","type","image","slug","procImage","getImage","toLowerCase","format","parseISO","as","to","G","alt","map","tag","StyledProjectLink","LinkButton","project","emoji","href","code","target","example","Link","strings","raw","Wave","keyframes","slice","WavingHand","data","Helmet","name","content","S","src","placeholder","posts","edges","post","key","node","frontmatter","fields","PostShort","ProjectShort"],"mappings":"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","file":"component---src-pages-index-tsx-a5be9af785dd0f3156f4.js","sourcesContent":["import '@babel/runtime/helpers/extends';\nimport 'react';\nimport '@emotion/is-prop-valid';\nimport createStyled from '../base/dist/emotion-styled-base.browser.esm.js';\nimport '@emotion/react';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nvar newStyled = createStyled.bind();\ntags.forEach(function (tagName) {\n  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type\n  newStyled[tagName] = newStyled(tagName);\n});\nexport default newStyled;","import { format, parseISO } from \"date-fns\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImageProps, getImage, GatsbyImage } from \"gatsby-plugin-image\"\nimport { FileNode } from \"gatsby-plugin-image/dist/src/components/hooks\"\nimport { styled } from \"twin.macro\"\nimport TypeStripe from \"./TypeStripe\"\nimport React from \"react\"\nimport tw from \"twin.macro\"\nimport \"twin.macro\"\n\nimport {\n  Container,\n  Header,\n  Text,\n  ColContainer,\n  NavLink,\n  ShortContainer,\n  ContainerBelowStripe,\n  TagBadge,\n} from \"./styled\"\n\nconst PostShort = ({\n  title,\n  date,\n  description,\n  tags,\n  type,\n  image,\n  slug,\n}: {\n  image: FileNode\n  title: string\n  date: string\n  description: string\n  tags: string[]\n  type: string\n  slug: string\n}) => {\n  const procImage = getImage(image)\n  return (\n    <ShortContainer>\n      <TypeStripe type={type} tw=\"py-0.5 px-4 font-tmono mb-2\">\n        {type ? type.toLowerCase() : \"other\"}\n      </TypeStripe>\n      {/* <Container tw=\"pt-1 pb-3 flex-grow h-full\"> */}\n      <ContainerBelowStripe>\n        <ColContainer tw=\"flex-nowrap\">\n          <div tw=\" w-3/4 md:w-1/2 order-2 sm:order-none text-center mx-auto sm:text-left\">\n            <h6 tw=\"font-light font-tmono text-tertiary-fg\">\n              {format(parseISO(date), \"MMM d, y\")}\n            </h6>\n            <Header as=\"h3\" tw=\"text-lg md:text-xl xl:text-2xl \">\n              <NavLink tw=\"hover:underline\" to={slug}>\n                {title}\n              </NavLink>\n            </Header>\n            <Text tw=\"\">{description}</Text>\n          </div>\n          <div tw=\"w-full md:w-1/2 relative md:max-h-48\">\n            {procImage ? (\n              <GatsbyImage\n                tw=\"h-full max-h-48 w-full\"\n                alt=\"surfin dog\"\n                image={procImage}\n              />\n            ) : null}\n            <div tw=\"absolute bottom-4  gap-1 right-2 flex  flex-wrap-reverse content-end items-end justify-end\">\n              {tags.map(tag =>\n                tag !== \"none\" ? (\n                  // <h6 tw=\"bg-primary-fill rounded-2xl py-1 px-4 border border-secondary-fg cursor-pointer opacity-75 \">\n\n                  <Link to={`/tags/${tag}`}>\n                    <TagBadge tw=\"opacity-80\">{tag}</TagBadge>\n                  </Link>\n                ) : // </h6>\n                null\n              )}\n            </div>\n          </div>\n        </ColContainer>\n      </ContainerBelowStripe>\n      {/* </Container> */}\n    </ShortContainer>\n  )\n}\n\nexport default PostShort\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport tw, { styled } from \"twin.macro\"\nimport \"twin.macro\"\nimport {\n  ContainerBelowStripe,\n  LinkButton,\n  ShortContainer,\n  TagBadge,\n  Text,\n} from \"./styled\"\nimport TypeStripe from \"./TypeStripe\"\n\ninterface Props {\n  project: {\n    title: string\n    description: string\n    tags: string[]\n    emoji: string\n    slug: string\n    example: string\n    code: string\n  }\n}\n\nconst StyledProjectLink = styled(LinkButton)`\n  ${tw`hover:shadow-xl transition-all`}\n`\nconst ProjectShort = ({ project }: Props) => {\n  return (\n    <ShortContainer>\n      <TypeStripe type=\"project\">project</TypeStripe>\n      <ContainerBelowStripe>\n        <header tw=\"\">\n          <div tw=\"flex items-baseline gap-2 \">\n            <span tw=\"text-2xl lg:text-4xl\">{project.emoji}</span>\n            <Link tw=\"hover:underline\" to={project.slug}>\n              <h2 tw=\"text-lg font-bold font-tmono\">{project.title}</h2>\n            </Link>\n          </div>\n          <div tw=\"flex flex-wrap-reverse my-1 gap-1\">\n            {project.tags.map(tag => (\n              <Link to={`/tags/${tag}`}>\n                <TagBadge>\n                  <h6 tw=\"text-sm\">{tag}</h6>\n                </TagBadge>\n              </Link>\n            ))}\n          </div>\n        </header>\n        <div tw=\"max-w-sm\">\n          <Text>{project.description}</Text>\n        </div>\n        <div tw=\"mt-auto flex justify-center sm:justify-start md:justify-center md:mx-0 gap-1 flex-wrap\">\n          <StyledProjectLink href={project.code} target=\"_blank\">\n            Code\n          </StyledProjectLink>\n          {project.example && (\n            <StyledProjectLink href={project.example} target=\"_blank\">\n              Example\n            </StyledProjectLink>\n          )}\n\n          <StyledProjectLink as={Link} to={project.slug}>\n            {/* This shows as an error, but is not an issue */}\n            Write-up\n          </StyledProjectLink>\n        </div>\n      </ContainerBelowStripe>\n    </ShortContainer>\n  )\n}\n\nexport default ProjectShort\n","import * as React from \"react\"\nimport { useContext } from \"react\"\nimport { useState } from \"react\"\nimport { graphql, Link, PageProps } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport tw, { styled, theme } from \"twin.macro\"\nimport { keyframes } from \"@emotion/react\"\nimport Sub from \"../components/subel\"\nimport TestTwo from \"../components/test2\"\nimport TestThree from \"../components/test3\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Helmet } from \"react-helmet\"\nimport \"twin.macro\"\nimport {\n  ContentBounds,\n  Container,\n  Header,\n  DivideHR,\n  Text,\n  FloatFrame,\n  Caption,\n  ExternalLink,\n  ColContainer,\n  Button,\n  SubHeader,\n  NavLink,\n  HomeSection,\n} from \"../components/styled\"\nimport { FileNode } from \"gatsby-plugin-image/dist/src/components/hooks\"\nimport PostShort from \"../components/PostShort\"\nimport ProjectShort from \"../components/ProjectShort\"\n\nconst Wave = keyframes`\n    0%{\n      transform: rotate(0deg);\n    }\n    50%{\n      transform: rotate(45deg);\n    }\n    100%{\n      transform: rotate(0deg);\n    }\n`\n\nconst WavingHand = styled.span`\n  display: inline-block;\n  transform-origin: bottom right;\n  animation: ${Wave} 1.5s linear;\n  cursor: default;\n  &:hover {\n    animation: ${Wave} 1.5s linear;\n  }\n`\nconst renderTwoMostRecent = (posts: IPostData[]) => {\n  return posts.map(post => (\n    <li\n      key={post.node.frontmatter.title}\n      tw=\"flex-1 hover:shadow-2xl filter brightness-95 hover:(brightness-100) transition-all duration-300 cursor-pointer\"\n    >\n      <Link to={post.node.fields.slug}>\n        <PostShort\n          title={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          date={post.node.frontmatter.date}\n          image={post.node.frontmatter.image}\n          tags={post.node.frontmatter.tags}\n          type={post.node.frontmatter.type}\n          slug={post.node.fields.slug}\n        />\n      </Link>\n    </li>\n  ))\n}\nconst renderProject = (project: IProjectData) => (\n  <Link to={project.node.fields.slug}>\n    <ProjectShort\n      project={{\n        title: project.node.frontmatter.title,\n        code: project.node.frontmatter.code,\n        slug: project.node.fields.slug,\n        emoji: project.node.frontmatter.emoji,\n        example: project.node.frontmatter.example,\n        tags: project.node.frontmatter.tags,\n        description: project.node.frontmatter.description,\n      }}\n    />\n  </Link>\n)\n\nconst IndexPage = ({ data }: PageProps<IPageQueryData>) => {\n  return (\n    <>\n      <Helmet>\n        <title>Tknapp</title>\n        <meta\n          name=\"description\"\n          content=\"The personal webpage of Tyler Knapp\"\n        />\n      </Helmet>\n      <Layout>\n        <Container tw=\"py-12 font-tmono bg-secondary-fill \">\n          <ContentBounds tw=\"gap-4\">\n            <Header tw=\"text-5xl md:text-7xl mb-12 text-center md:text-left\">\n              <WavingHand>👋</WavingHand>Hello!\n            </Header>\n            <div tw=\"flex flex-col md:flex-row font-bold  p-2 text-base text-tertiary-fg font-tsans gap-3 justify-center items-center\">\n              <StaticImage\n                alt=\"me! my head!\"\n                src=\"../images/mecxbaumann.jpg\"\n                tw=\"rounded-full max-w-xs shadow-lg\"\n                placeholder=\"blurred\"\n              />\n              <h3 tw=\"text-center md:text-left max-w-sm text-xl\">\n                I'm Tyler - a web developer, summer camp director, musician and\n                general dork. I like bikes, games, chips, salsa, and making\n                things with computers.\n              </h3>\n            </div>\n            <h4 tw=\"mt-6 text-center md:text-left text-primary-fg font-bold text-3xl sm:text-4xl md:text-5xl\">\n              Welcome to my internet thing.\n            </h4>\n          </ContentBounds>\n        </Container>\n        <HomeSection>\n          <header tw=\" py-1 m-2\">\n            <SubHeader tw=\"text-center text-base\">Most recent posts:</SubHeader>\n          </header>\n          <ul tw=\"flex flex-col lg:flex-row justify-center gap-6 my-24\">\n            {renderTwoMostRecent(data.posts.edges)}\n          </ul>\n\n          <NavLink to=\"/posts\" tw=\"hover:underline text-center block\">\n            view all posts\n          </NavLink>\n        </HomeSection>\n\n        <HomeSection>\n          <header tw=\" py-1 m-2\">\n            <SubHeader tw=\"text-center text-base\">\n              Most Recent Project\n            </SubHeader>\n          </header>\n          <div tw=\"mx-auto max-w-md my-24\">\n            {renderProject(data.project.edges[0])}\n          </div>\n\n          <NavLink to=\"/projects\" tw=\"hover:underline text-center block\">\n            view all projects\n          </NavLink>\n        </HomeSection>\n\n        <HomeSection>\n          <header tw=\" py-1 m-2\">\n            <SubHeader tw=\"text-center text-base\">\n              Want to get in touch?\n            </SubHeader>\n          </header>\n          <div tw=\"flex flex-col items-center text-center my-12 gap-12 font-tsans text-lg max-w-prose mx-auto\">\n            <p>\n              I'm open to new developoment opportunties!\n              <br /> Just looking to chat about code, synthesizers, or to argue\n              over the best episode of <em>TNG</em>? I'd love to hear from you.\n              <p tw=\"text-xs\">\n                (The best episode of TNG is <em>Who Watches the Watchers</em>{\" \"}\n                tied with <em>Darmok</em>\n                .)\n              </p>\n            </p>\n            <div tw=\"\">\n              <p>\n                Shoot me an email at{\" \"}\n                <a\n                  href=\"mailto:knapptr@gmail.com\"\n                  tw=\"font-bold hover:underline\"\n                >\n                  knapptr@gmail.com\n                </a>\n                <br />\n                or{\" \"}\n                <Link tw=\"font-bold hover:underline\" to=\"/contact\">\n                  learn about more ways to say hello.\n                </Link>\n                <br />\n                lets work together.\n              </p>\n            </div>\n          </div>\n        </HomeSection>\n      </Layout>\n    </>\n  )\n}\n\ninterface IPostData {\n  node: {\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      image: FileNode\n      date: string\n      description: string\n      title: string\n      tags: string[]\n      type: string\n    }\n  }\n}\ninterface IProjectData {\n  node: {\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      title: string\n      description: string\n      emoji: string\n      tags: string[]\n      code: string\n      example: string\n    }\n  }\n}\ninterface IPageQueryData {\n  posts: {\n    edges: IPostData[]\n  }\n  project: {\n    edges: IProjectData[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    posts: allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: 2\n      filter: {\n        fields: { contentType: { eq: \"posts\" } }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n            date\n            description\n            title\n            tags\n            type\n          }\n        }\n      }\n    }\n    project: allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: 1\n      filter: {\n        fields: { contentType: { eq: \"projects\" } }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            emoji\n            description\n            title\n            tags\n            code\n            example\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"sourceRoot":""}